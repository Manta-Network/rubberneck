service: rubberneck

frameworkVersion: '3'
variablesResolutionMode: 20210326
useDotenv: true

provider:
  name: aws
  runtime: nodejs14.x
  stage: prod
  profile: pelagos-service
  region: eu-central-1
  lambdaHashingVersion: 20201221
  iam:
    role:
      name: rubberneck-node-status
      # https://docs.aws.amazon.com/systems-manager/latest/userguide/sysman-paramstore-access.html
      statements:
        -
          Effect: Allow
          Action:
            - 'ssm:DescribeParameters'
          Resource: '*'
        -
          Effect: Allow
          Action:
            - 'ssm:GetParameter'
          Resource: 'arn:aws:ssm:eu-central-1::parameter/rubberneck_*'

plugins:
  - serverless-offline

package:
  excludeDevDependencies: false

functions:

  blockchains:
    handler: handler.blockchains
    events:
      -
        http:
          path: blockchains
          method: get
          cors: true

  nodes:
    timeout: 29
    handler: handler.nodes
    environment:
      rubberneck_hetzner_calamari: ${ssm:/rubberneck_hetzner_calamari}
      rubberneck_hetzner_dolphin: ${ssm:/rubberneck_hetzner_dolphin}
      rubberneck_hetzner_robot_default_username: ${ssm:/rubberneck_hetzner_robot_default_username}
      rubberneck_hetzner_robot_default_password: ${ssm:/rubberneck_hetzner_robot_default_password}
    events:
      -
        http:
          path: nodes/{relaychain}/{parachain}
          method: get
          cors: true
          request:
            parameters:
               paths:
                 relaychain: true
                 parachain: true
      -
        http:
          path: nodes/{relaychain}
          method: get
          cors: true
          request:
            parameters:
               paths:
                 relaychain: true

  node:
    timeout: 29
    handler: handler.node
    events:
      -
        http:
          path: node/{fqdn}
          method: get
          cors: true
          request:
            parameters:
               paths:
                 fqdn: true

  observations:
    timeout: 29
    handler: handler.observations
    vpc:
      securityGroupIds:
        - sg-0b88eb681e170ddac
      subnetIds:
        - subnet-0b285be6d5b687629
        - subnet-0e880bfb309f2f7c8
        - subnet-0d992d72b76b84264
    environment:
      rubberneck_db_readwrite: ${ssm:/rubberneck_db_readwrite}
      blockchain_db_read: ${ssm:/rubberneck_blockchain_db_read}
    events:
      -
        http:
          path: node/{fqdn}/observations
          method: get
          cors: true
          request:
            parameters:
               paths:
                 fqdn: true

  nodeHealth:
    timeout: 29
    handler: health.node
    environment:
      blockchain_db_read: ${ssm:/rubberneck_blockchain_db_read}
    events:
      -
        http:
          path: node/{fqdn}/health/{from}/{to}
          method: get
          cors: true
          request:
            parameters:
               paths:
                 fqdn: true
                 from: true
                 to: true

  chainHealth:
    timeout: 29
    handler: health.chain
    environment:
      blockchain_db_read: ${ssm:/rubberneck_blockchain_db_read}
    events:
      -
        http:
          path: chain/{relaychain}/{parachain}/health/{from}/{to}
          method: get
          cors: true
          request:
            parameters:
               paths:
                 relaychain: true
                 parachain: true
                 from: true
                 to: true
      -
        http:
          path: chain/{relaychain}/health/{from}/{to}
          method: get
          cors: true
          request:
            parameters:
               paths:
                 relaychain: true
                 from: true
                 to: true